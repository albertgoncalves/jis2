; def fib(n, a, b):
;     if n == 0:
;         return a
;     if n == 1:
;         return b
;     return fib(n - 1, b, a + b)

            push    .return         ; .return
            push    30              ; .return, 30
            push    0               ; .return, 30, 0
            push    1               ; .return, 30, 0, 1
            jump    fib             ;
        .return:                    ;
            halt                    ; fib(30)

    fib:                            ;
            dup     2               ; .return, n, a, b, n
            push    0               ; .return, n, a, b, n, 0
            eq                      ; .return, n, a, b, n==0
            jz      .else_0         ; .return, n, a, b

            drop    1               ; .return, n, a
            swap    2               ; a, n, .return
            swap    1               ; a, .return, n
            drop    1               ; a, .return
            ret

        .else_0:
            dup     2               ; .return, n, a, b, n
            push    1               ; .return, n, a, b, n, 1
            eq                      ; .return, n, a, b, n==1
            jz      .else_1         ; .return, n, a, b

            swap    3               ; b, n, a, .return
            swap    2               ; b, .return, a, n
            drop    2               ; b, .return
            ret

        .else_1:
            swap    1               ; .return, n, b, a
            dup     1               ; .return, n, b, a, b
            add                     ; .return, n, b, a+b
            swap    2               ; .return, a+b, b, n
            push    -1              ; .return, a+b, b, n, -1
            add                     ; .return, a+b, b, n-1
            swap    2               ; .return, n-1, b, a+b
            jump    fib
